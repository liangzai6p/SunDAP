<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sunyard.ars.system.dao.mc.LabMcVersionMapper" >
  <resultMap id="BaseResultMap" type="com.sunyard.ars.system.pojo.mc.LabMcVersion" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" property="id" jdbcType="DECIMAL" />
    <result column="MODEL_ID" property="modelId" jdbcType="DECIMAL" />
    <result column="VERSION_NAME" property="versionName" jdbcType="VARCHAR" />
    <result column="MODEL_NAME" property="modelName" jdbcType="VARCHAR" />
    <result column="VERSION_ID" property="versionId" jdbcType="DECIMAL" />
    <result column="MODEL_DESCRIPTION" property="modelDescription" jdbcType="VARCHAR" />
    <result column="TABLE_ID" property="tableId" jdbcType="DECIMAL" />
    <result column="VERSION_SQL" property="versionSql" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, MODEL_ID,VERSION_NAME,MODEL_NAME,VERSION_ID,MODEL_DESCRIPTION,TABLE_ID,VERSION_SQL
  </sql>
  
  
  <insert id="insert" parameterType="com.sunyard.ars.system.pojo.mc.LabMcVersion">
  
   	<selectKey resultType="INTEGER" order="BEFORE" keyProperty="id">  
  	 select case when max(id)+1 is null then 1 else max(id)+1 end as id   from LAB_MC_VERSION
	</selectKey> 
	
    insert into LAB_MC_VERSION (ID,MODEL_ID,MODEL_NAME, VERSION_ID,VERSION_NAME, MODEL_DESCRIPTION,TABLE_ID,VERSION_SQL
      )
    values (
    #{id},
    #{modelId},
    #{modelName,jdbcType=VARCHAR},
    (select  max(version_id)+1  as versionId from LAB_MC_VERSION where model_id=#{modelId}), 
    #{versionName},
    #{modelDescription,jdbcType=VARCHAR},
    #{tableId},
    #{versionSql}
      )
  </insert>
  
  
   <insert id="insertNoModelId" parameterType="com.sunyard.ars.system.pojo.mc.LabMcVersion">
 	<selectKey resultType="INTEGER" order="BEFORE" keyProperty="id">  
  	 select case when max(id)+1 is null then 1 else max(id)+1 end as id   from LAB_MC_VERSION
	</selectKey> 
    insert into LAB_MC_VERSION (ID,MODEL_ID,MODEL_NAME, VERSION_ID,VERSION_NAME, MODEL_DESCRIPTION,TABLE_ID,VERSION_SQL
      )
    values (
    #{id},
    (select case when max(model_id)+1 is null then 1 else max(model_id)+1 end from LAB_MC_VERSION),
    #{modelName,jdbcType=VARCHAR},
    1, 
    #{versionName},
    #{modelDescription,jdbcType=VARCHAR},
    #{tableId},
    #{versionSql}
      )
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.sunyard.ars.system.pojo.mc.LabMcVersion" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into LAB_MC_VERSION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="modelName != null" >
        MODEL_NAME,
      </if>
      <if test="versionId != null" >
        VERSION_ID,
      </if>
      <if test="modelDescription != null" >
        MODEL_DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="modelName != null" >
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null" >
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="modelDescription != null" >
        #{modelDescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
	<!-- 根据模型名称或者id查找数据 -->
	<select id="selectBySelective" parameterType="com.sunyard.ars.system.pojo.mc.LabMcVersion"
		resultType="map">
		SELECT id,model_id,model_name,version_id,model_description,table_id,lab_state,version_sql
		FROM lab_mc_version
		<where>
			<if test="modelName != null and modelName != ''">
				model_name like '%'||#{modelName,jdbcType=VARCHAR}||'%'
			</if>
			<if test="modelId != null and modelId != ''">
				and model_id =#{modelId,jdbcType=VARCHAR}
			</if>
			<if test="id != null and id != ''">
				and id=#{id,jdbcType=DECIMAL}
			</if>
		</where>
		order by model_id,version_id
	</select>
	<!-- 根据模型id在 lab_exhibit_field_tb和mc_field_tb中联合查询中查找展现字段名和英文名 -->
	<select id="selectByModelId" resultType="map">
		SELECT t1.*,t2.* FROM lab_exhibit_field_tb t1,mc_field_tb t2
		<where>
			t2.ID=t1.table_field_id
			<if test="modelId != null and modelId != ''">
				and t1.model_id=#{modelId,jdbcType=DECIMAL}
			</if>
		</where>
	</select>
	<select id="selectByTableId" resultType="string">
		SELECT table_name FROM mc_table_tb
		<where>
			<if test="tableId != null and tableId != ''">
				 id=#{tableId,jdbcType=DECIMAL}
			</if>
		</where>
	</select>
	<!-- 通过动态传入表名和表字段查询数据 -->
	<select id="queryDatas" resultType="map">
	   select ROWNUM NUM,
	  <if test="fieldNameList !=null">
	   <foreach collection="fieldNameList" item="fieldName" separator=",">
	   	${fieldName}
	   </foreach>
	</if>
	from ${tableName}
	</select>
	<!-- 通过模型id和版本id获得该模型该版本的所有规则 -->
	<!-- <select id="getRules" resultType="map">
	select t1.*,t2.TABLE_NAME from lab_rule_tb t1,mc_table_tb t2
	<where>
	     t1.table_id=t2.id
       	<if test="modelId !=null and modelId!=''">
       	and model_id=#{modelId,jdbcType=DECIMAL}
       	</if>
       	<if test="versionId !=null and versionId !=''">
       	and version_id=#{versionId,jdbcType=DECIMAL}
       	</if>
	</where>
	</select> -->
	
	<!-- 插入模型展现字段到mc_exhibit_tb -->
  	<insert id ="insertExhibitField" >
  	INSERT INTO mc_exhibit_field_tb (id,ROWNO, MODEL_ID, TABLE_FIELD_ID, FORMAT, ISFIND, ISDROPDOWN, ISIMPORTANT, RELATE_ID, OPERATOR, EXHIBIT_NAME, FILTER_TYPE, ISTUOMIN, ISPICTUREFIELD) 
  	SELECT seq_mc_exhibit_field_tb.NEXTVAL,ROWNO, #{produceModelId,jdbcType=DECIMAL} as MODEL_ID, TABLE_FIELD_ID, FORMAT, ISFIND, ISDROPDOWN, ISIMPORTANT, RELATE_ID, OPERATOR, EXHIBIT_NAME, FILTER_TYPE, ISTUOMIN, ISPICTUREFIELD FROM lab_exhibit_field_tb WHERE model_id= #{modelId,jdbcType=INTEGER}
  	</insert>
  
    <insert id="insertRules" parameterType="com.sunyard.ars.system.pojo.mc.View">
    <selectKey resultType="INTEGER" order="BEFORE" keyProperty="id">  
      select  case when max(id)+1 is null  then 1 else max(id)+1 end  as id from MC_VIEW_TB
  	 </selectKey> 
    insert into MC_VIEW_TB (ID, NAME, MODEL_ID, 
      DS_ID, COMPOSITE_TYPE, ISGROUPBY, 
      QUERY_STR, SEQNO)
    values (#{id,jdbcType=DECIMAL}, #{name,jdbcType=VARCHAR}, #{modelId,jdbcType=DECIMAL}, 
      #{dsId,jdbcType=DECIMAL}, #{compositeType,jdbcType=CHAR}, #{isgroupby,jdbcType=CHAR}, 
      #{queryStr,jdbcType=VARCHAR}, #{seqno,jdbcType=DECIMAL})
  </insert>

  
  
  <select id="selectByModelName" parameterType="java.lang.String" resultType="java.util.Map">
  	SELECT DISTINCT MODEL_ID,TABLE_ID FROM LAB_MC_VERSION T WHERE T.MODEL_NAME=#{modelName}
  
  </select>


  <update id="updateModelIdAndLabState">
   update lab_mc_version set produce_model_id=#{id,jdbcType=INTEGER}, lab_state='1' where model_id=#{modelId,jdbcType=DECIMAL} and version_id=#{versionId,jdbcType=DECIMAL}
  </update>
  
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from LAB_MC_VERSION
    where ID = #{id,jdbcType=DECIMAL}
  </select>
</mapper>