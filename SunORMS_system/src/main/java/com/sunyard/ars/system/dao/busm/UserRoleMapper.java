package com.sunyard.ars.system.dao.busm;

import com.sunyard.ars.system.bean.busm.UserRole;

import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface UserRoleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUNARS.SM_USER_ROLE_TB
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(@Param("userNo") String userNo, @Param("roleNo") String roleNo, @Param("isOpen") String isOpen, @Param("bankNo") String bankNo, @Param("systemNo") String systemNo, @Param("projectNo") String projectNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUNARS.SM_USER_ROLE_TB
     *
     * @mbggenerated
     */
    int insert(UserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUNARS.SM_USER_ROLE_TB
     *
     * @mbggenerated
     */
    int insertSelective(UserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUNARS.SM_USER_ROLE_TB
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserRole record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SUNARS.SM_USER_ROLE_TB
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(UserRole record);
    
    /**
     * 根据UserRole对象的非空值查询
     * @param record
     * @return
     */
    List<UserRole> selectBySelective(@Param("userRole")UserRole record,@Param("hasPrivOrganFlag")String hasPrivOrganFlag );
    
    /**
     * 将userRoleOld更新为userRoleNew（更新userRoleNew中的非空字段）
     * @param userRoleOld
     * @param userRoleNew
     * @return
     */
    int updateUserRoleSelective(@Param("userRoleOld")UserRole userRoleOld, @Param("userRoleNew")UserRole userRoleNew);
    
    
    /**
     * 根据userNo和roleNo删除指定数据
     * @param userNo
     * @param roleNo
     * @return
     */
    int deleteByUserNoAndRoleNo(@Param("userNo") String userNo, @Param("roleNo") String roleNo);
    /**
     * 根据user和RoleNo删除指定的数据！但是isTransmit=1!删除转授权的角色
     * @param userNo
     * @param roleNo
     * @return
     */
    int deleteByUserNoAndRoleNoAndIsTrans1(@Param("userNo") String userNo);
    
    /**
     * 判断已经插入的数据是否存在
     * @param r
     */
    List<UserRole> selectIsExist(UserRole r);

	List<UserRole> getRolesByUserNo(String userNo);

	void deleteRolesByUserNo(String userNo);

	List<UserRole> selectBySelectiveOfMine(UserRole record);
}