package com.sunyard.ars.common.dao;

import com.sunyard.ars.common.pojo.Flow;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;

import org.apache.ibatis.annotations.Param;

public interface FlowMapper {
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FL_FLOW_TB
     *
     * @mbg.generated
     */
    Flow selectByPrimaryKey(BigDecimal seqId);

	List<HashMap<String, Object>> getFlowInfoList(HashMap<String, Object> map);

	int selectFlowToDeal(HashMap<String, Object> map);

	int updateFlow(HashMap<String, Object> map);

	/**
	 * 释放所有勾兑流水
	 * @param condMap
	 * @return
	 */
	int updateFreeAllFlow(HashMap<String, Object> condMap);

	/**
	 * 获取未勾兑流水
	 * @param condMap
	 * @return
	 */
	int getUnchechFlowCount(HashMap<String, Object> condMap);
	/**
	 * 勾兑信息查询流水
	 * @param condMap
	 * @return
	 */
	List<HashMap<String, Object>> getCheckFlowList(HashMap<String, Object> condMap);

	/**
	 * 查询套勾流水勾兑信息
	 * @param condMap
	 * @return
	 */
	List<HashMap<String, Object>> checkPluralFlowIsDealed(HashMap<String, Object> condMap);

	/**
	 * 根据条件获取流水勾兑数量
	 * @param condMap
	 * @return
	 */
	int selectDealCount(HashMap<String, Object> condMap);

	/**
	 * 获取单条勾兑显示流水信息
	 * @param condMap
	 * @return
	 */
	List<HashMap<String, Object>> getSingleFlowInfoList(HashMap<String, Object> condMap);
	/**
	 * 查询符合条件的流水
	 * @param condMap
	 * @return
	 */
	List<String> selectVerifyFlow(HashMap<String, Object> condMap);
	/**
	 * 执行勾对sql
	 * @return
	 */
	int executeSqls(List<String> list);
	
//	int executeSql(@Param("sql")String sql);
	
	//删除历史表根据ID
	int deletehisflowData(HashMap<String, Object> condMap);
	
	int deleteArchiveflowData(HashMap<String, Object> condMap);
	
	int existsFlowByOccurDate(HashMap<String, Object> condMap);
	
	/**
	 * 获取指定交易日期对应的柜员/客户/交易信息列表
	 * @param condMap
	 * @return
	 */
	List<HashMap<String, Object>> getFlowByDateAndParamater(HashMap<String, Object> condMap);
	int updateFlowErrorFlag(@Param("seqId")Integer seqId);

	List getFlowCount(@Param("siteNo")List<String> siteNo, @Param("occurDate")String occurDate);
	List getFlowCount2(@Param("tellers")List<String> tellers, @Param("occurDate")String occurDate);
	
	List<String> selectFlowMonData(String occurDate);
}