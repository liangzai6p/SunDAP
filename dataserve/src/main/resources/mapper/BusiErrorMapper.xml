<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunyard.dap.dataserve.mapper.BusiErrorMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.sunyard.dap.dataserve.entity.BusiErrorDetailDo">
        <result column="TASK_ID" property="taskId" />
        <result column="ZONE_NO" property="zoneNo" />
        <result column="ZONE_NAME" property="zoneName" />
        <result column="BRANCH_NO" property="branchNo" />
        <result column="BRANCH_NAME" property="branchName" />
        <result column="SITE_NO" property="siteNo" />
        <result column="SITE_NAME" property="siteName" />
        <result column="CHANNEL_NO" property="channelNo" />
        <result column="CHANNEL_NAME" property="channelName" />
        <result column="ROLE_NO" property="roleNo" />
        <result column="ROLE_NAME" property="roleName" />
        <result column="STAFF_NO" property="staffNo" />
        <result column="STAFF_NAME" property="staffName" />
        <result column="CUS_TYPE" property="cusType" />
        <result column="CUS_NO" property="cusNo" />
        <result column="CUS_NAME" property="cusName" />
        <result column="BUSI_NO" property="busiNo" />
        <result column="BUSI_NAME" property="busiName" />
        <result column="STYPE_NO" property="stypeNo" />
        <result column="STYPE_NAME" property="stypeName" />
        <result column="MAC_NO" property="macNo" />
        <result column="CURRENCY" property="currency" />
        <result column="TRANS_AMOUNT" property="transAmount" />
        <result column="CREATE_TIME" property="createTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        TASK_ID, ZONE_NO, ZONE_NAME, BRANCH_NO, BRANCH_NAME, SITE_NO, SITE_NAME, CHANNEL_NO, CHANNEL_NAME, ROLE_NO, ROLE_NAME, STAFF_NO, STAFF_NAME, CUS_TYPE, CUS_NO, CUS_NAME, BUSI_NO, BUSI_NAME, STYPE_NO, STYPE_NAME, MAC_NO, CURRENCY, TRANS_AMOUNT, CREATE_TIME
    </sql>
    <select id="listBranchErrorCount" resultType="java.util.HashMap">
        select a.BRANCH_NO,a.BRANCH_NAME,nvl(e.COUNT,0) ERROR_COUNT,round(nvl(e.COUNT,0)/a.COUNT*100,2) ERROR_RATE
        from
        (
          select nvl(c.BRANCH_NO,d.BRANCH_NO) BRANCH_NO,nvl(c.BRANCH_NAME,d.BRANCH_NAME) BRANCH_NAME,nvl(c.COUNT,0)+nvl(d.COUNT,0) COUNT from
            (
                select BRANCH_NO,BRANCH_NAME,sum(busi_count) COUNT
                from dm_busi_count_tb
                <trim prefix="where" prefixOverrides="and">
                    <if test="params.START_TIME != null and params.END_TIME != null">
                        to_char(RECORD_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
                    </if>
                </trim>
                group by branch_no,branch_name
            ) c full join
            (
                select BRANCH_NO,BRANCH_NAME,count(*) COUNT
                from DM_BUSI_DETAIL_TB
                <trim prefix="where" prefixOverrides="and">
                    <if test="params.START_TIME != null and params.END_TIME != null">
                        to_char(CREATE_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
                    </if>
                </trim>
                group by BRANCH_NO, BRANCH_NAME
            ) d on c.branch_no = d.branch_no
        ) a left join
        (
            select BRANCH_NO,BRANCH_NAME,count(*) COUNT
            from DM_BUSI_DETAIL_ERROR_TB
            <trim prefix="where" prefixOverrides="and">
                <if test="params.START_TIME != null and params.END_TIME != null">
                    to_char(CREATE_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
                </if>
            </trim>
            group by BRANCH_NO, BRANCH_NAME
        ) e on a.BRANCH_NO = e.BRANCH_NO
        order by ERROR_RATE desc
    </select>

    <select id="listSiteErrorCount" resultType="java.util.HashMap">
        select a.SITE_NO,a.SITE_NAME,nvl(e.COUNT,0) ERROR_COUNT,round(nvl(e.COUNT,0)/a.COUNT*100,2) ERROR_RATE
        from
        (
        select nvl(c.SITE_NO,d.SITE_NO) SITE_NO,nvl(c.SITE_NAME,d.SITE_NAME) SITE_NAME,nvl(c.COUNT,0)+nvl(d.COUNT,0) COUNT from
        (
        select SITE_NO,SITE_NAME,sum(busi_count) COUNT
        from dm_busi_count_tb
        <trim prefix="where" prefixOverrides="and">
            <if test="params.BRANCH_NO != null">
                BRANCH_NO = #{params.BRANCH_NO}
            </if>
            <if test="params.START_TIME != null and params.END_TIME != null">
                and to_char(RECORD_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
            </if>
        </trim>
        group by SITE_no,SITE_name
        ) c full join
        (
        select SITE_NO,SITE_NAME,count(*) COUNT
        from DM_BUSI_DETAIL_TB
        <trim prefix="where" prefixOverrides="and">
            <if test="params.BRANCH_NO != null">
                BRANCH_NO = #{params.BRANCH_NO}
            </if>
            <if test="params.START_TIME != null and params.END_TIME != null">
                and to_char(CREATE_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
            </if>
        </trim>
        group by SITE_NO, SITE_NAME
        ) d on c.SITE_no = d.SITE_no
        ) a left join
        (
        select SITE_NO,SITE_NAME,count(*) COUNT
        from DM_BUSI_DETAIL_ERROR_TB
        <trim prefix="where" prefixOverrides="and">
            <if test="params.BRANCH_NO != null">
                BRANCH_NO = #{params.BRANCH_NO}
            </if>
            <if test="params.START_TIME != null and params.END_TIME != null">
                and to_char(CREATE_TIME,'yyyymmdd') between #{params.START_TIME} and #{params.END_TIME}
            </if>
        </trim>
        group by SITE_NO, SITE_NAME
        ) e on a.SITE_NO = e.SITE_NO
        order by ERROR_RATE desc
    </select>

</mapper>
